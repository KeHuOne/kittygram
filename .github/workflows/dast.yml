name: 🧪 DAST ZAP Scan

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  zap_scan:
    name: 📡 OWASP ZAP Full Scan
    runs-on: ubuntu-latest

    outputs:
      warn: ${{ steps.zap_summary.outputs.warn }}
      fail: ${{ steps.zap_summary.outputs.fail }}
      pass: ${{ steps.zap_summary.outputs.pass }}

    steps:
      - name: 📁 Create output files
        run: |
          touch report_html.html report_json.json report_md.md
          chmod a+w report_html.html report_json.json report_md.md

      - name: 📡 Run ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://185.121.13.20:9000'
          fail_action: false
          cmd_options: '-a -j'
          allow_issue_writing: false

      - name: 💾 Save ZAP reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-reports
          path: |
            report_html.html
            report_json.json
            report_md.md

      - name: 🔧 Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: 📊 Extract ZAP scan results
        id: zap_summary
        run: |
          WARN=$(jq '.site[0].alerts[] | select(.riskcode=="2")' report_json.json | wc -l)
          FAIL=$(jq '.site[0].alerts[] | select(.riskcode=="3")' report_json.json | wc -l)
          PASS=$(jq '.site[0].alerts' report_json.json | jq length)
          echo "warn=$WARN" >> $GITHUB_OUTPUT
          echo "fail=$FAIL" >> $GITHUB_OUTPUT
          echo "pass=$PASS" >> $GITHUB_OUTPUT

  send_message:
    name: 📣 Telegram Notification
    runs-on: ubuntu-latest
    needs: zap_scan

    steps:
      - name: 📬 Send message to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_KITTY_TO }}
          token: ${{ secrets.TELEGRAM_KITTY_TOKEN }}
          message: |
            🧪 ZAP DAST завершён

            ⚠ Warnings: ${{ needs.zap_scan.outputs.warn }}
            🚫 Fails: ${{ needs.zap_scan.outputs.fail }}
            ✅ Total Alerts: ${{ needs.zap_scan.outputs.pass }}

            📎 Отчёт доступен как артефакт в GitHub Actions.